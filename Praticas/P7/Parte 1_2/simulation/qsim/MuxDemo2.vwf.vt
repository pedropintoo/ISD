// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/11/2022 10:07:10"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          MuxDemo2
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module MuxDemo2_vlg_vec_tst();
// constants                                           
// general purpose registers
reg S0;
reg S1;
reg S2;
reg S3;
reg X0;
reg X1;
reg X2;
reg X3;
reg X4;
reg X5;
reg X6;
reg X7;
reg X8;
reg X9;
reg X10;
reg X11;
reg X12;
reg X13;
reg X14;
reg X15;
// wires                                               
wire Y;

// assign statements (if any)                          
MuxDemo2 i1 (
// port map - connection between master ports and signals/registers   
	.S0(S0),
	.S1(S1),
	.S2(S2),
	.S3(S3),
	.X0(X0),
	.X1(X1),
	.X2(X2),
	.X3(X3),
	.X4(X4),
	.X5(X5),
	.X6(X6),
	.X7(X7),
	.X8(X8),
	.X9(X9),
	.X10(X10),
	.X11(X11),
	.X12(X12),
	.X13(X13),
	.X14(X14),
	.X15(X15),
	.Y(Y)
);
initial 
begin 
#1000000 $finish;
end 

// S3
initial
begin
	S3 = 1'b1;
	S3 = #700000 1'b0;
	S3 = #200000 1'b1;
end 

// S2
initial
begin
	S2 = 1'b1;
	S2 = #100000 1'b0;
	S2 = #100000 1'b1;
	S2 = #200000 1'b0;
	S2 = #100000 1'b1;
	S2 = #300000 1'b0;
end 

// S1
initial
begin
	S1 = 1'b0;
	S1 = #600000 1'b1;
	S1 = #300000 1'b0;
end 

// S0
initial
begin
	S0 = 1'b0;
	S0 = #200000 1'b1;
	S0 = #100000 1'b0;
	S0 = #100000 1'b1;
	S0 = #200000 1'b0;
	S0 = #100000 1'b1;
	S0 = #100000 1'b0;
	S0 = #100000 1'b1;
end 

// X15
initial
begin
	X15 = 1'b1;
	X15 = #300000 1'b0;
	X15 = #50000 1'b1;
	X15 = #50000 1'b0;
	X15 = #50000 1'b1;
	X15 = #100000 1'b0;
	X15 = #100000 1'b1;
	X15 = #50000 1'b0;
	X15 = #200000 1'b1;
	X15 = #50000 1'b0;
end 

// X14
initial
begin
	X14 = 1'b1;
	X14 = #200000 1'b0;
	X14 = #50000 1'b1;
	X14 = #200000 1'b0;
	X14 = #50000 1'b1;
	X14 = #50000 1'b0;
	X14 = #50000 1'b1;
	X14 = #200000 1'b0;
	X14 = #50000 1'b1;
	X14 = #100000 1'b0;
end 

// X13
initial
begin
	X13 = 1'b1;
	X13 = #50000 1'b0;
	X13 = #50000 1'b1;
	X13 = #200000 1'b0;
	X13 = #50000 1'b1;
	X13 = #50000 1'b0;
	X13 = #100000 1'b1;
	X13 = #50000 1'b0;
	X13 = #150000 1'b1;
	X13 = #100000 1'b0;
	X13 = #50000 1'b1;
	X13 = #50000 1'b0;
	X13 = #50000 1'b1;
end 

// X12
initial
begin
	X12 = 1'b1;
	X12 = #100000 1'b0;
	X12 = #50000 1'b1;
	X12 = #50000 1'b0;
	X12 = #100000 1'b1;
	X12 = #150000 1'b0;
	X12 = #150000 1'b1;
	X12 = #50000 1'b0;
	X12 = #50000 1'b1;
	X12 = #50000 1'b0;
	X12 = #50000 1'b1;
	X12 = #50000 1'b0;
	X12 = #100000 1'b1;
end 

// X11
initial
begin
	X11 = 1'b0;
	X11 = #50000 1'b1;
	X11 = #100000 1'b0;
	X11 = #250000 1'b1;
	X11 = #50000 1'b0;
	X11 = #200000 1'b1;
	X11 = #50000 1'b0;
	X11 = #150000 1'b1;
end 

// X10
initial
begin
	X10 = 1'b1;
	X10 = #100000 1'b0;
	X10 = #200000 1'b1;
	X10 = #100000 1'b0;
	X10 = #250000 1'b1;
	X10 = #200000 1'b0;
	X10 = #50000 1'b1;
	X10 = #50000 1'b0;
end 

// X9
initial
begin
	X9 = 1'b0;
	X9 = #50000 1'b1;
	X9 = #50000 1'b0;
	X9 = #200000 1'b1;
	X9 = #50000 1'b0;
	X9 = #100000 1'b1;
	X9 = #100000 1'b0;
	X9 = #300000 1'b1;
	X9 = #50000 1'b0;
end 

// X8
initial
begin
	X8 = 1'b1;
	X8 = #150000 1'b0;
	X8 = #100000 1'b1;
	X8 = #100000 1'b0;
	X8 = #50000 1'b1;
	X8 = #50000 1'b0;
	X8 = #50000 1'b1;
	X8 = #150000 1'b0;
	X8 = #50000 1'b1;
	X8 = #50000 1'b0;
	X8 = #150000 1'b1;
end 

// X7
initial
begin
	X7 = 1'b1;
	X7 = #100000 1'b0;
	X7 = #50000 1'b1;
	X7 = #50000 1'b0;
	X7 = #50000 1'b1;
	X7 = #50000 1'b0;
	X7 = #150000 1'b1;
	X7 = #50000 1'b0;
	X7 = #50000 1'b1;
	X7 = #50000 1'b0;
	X7 = #100000 1'b1;
	X7 = #100000 1'b0;
	X7 = #150000 1'b1;
end 

// X6
initial
begin
	X6 = 1'b0;
	X6 = #50000 1'b1;
	X6 = #100000 1'b0;
	X6 = #100000 1'b1;
	X6 = #50000 1'b0;
	X6 = #200000 1'b1;
	X6 = #100000 1'b0;
	X6 = #100000 1'b1;
	X6 = #50000 1'b0;
	X6 = #100000 1'b1;
end 

// X5
initial
begin
	X5 = 1'b1;
	X5 = #250000 1'b0;
	X5 = #100000 1'b1;
	X5 = #50000 1'b0;
	X5 = #200000 1'b1;
	X5 = #50000 1'b0;
	X5 = #50000 1'b1;
	X5 = #50000 1'b0;
	X5 = #150000 1'b1;
end 

// X4
initial
begin
	X4 = 1'b1;
	X4 = #100000 1'b0;
	X4 = #200000 1'b1;
	X4 = #100000 1'b0;
	X4 = #50000 1'b1;
	X4 = #150000 1'b0;
	X4 = #50000 1'b1;
	X4 = #100000 1'b0;
	X4 = #100000 1'b1;
	X4 = #50000 1'b0;
end 

// X3
initial
begin
	X3 = 1'b0;
	X3 = #150000 1'b1;
	X3 = #50000 1'b0;
	X3 = #50000 1'b1;
	X3 = #50000 1'b0;
	X3 = #100000 1'b1;
	X3 = #100000 1'b0;
	X3 = #50000 1'b1;
	X3 = #100000 1'b0;
	X3 = #150000 1'b1;
	X3 = #50000 1'b0;
	X3 = #50000 1'b1;
end 

// X2
initial
begin
	X2 = 1'b0;
	X2 = #50000 1'b1;
	X2 = #250000 1'b0;
	X2 = #150000 1'b1;
	X2 = #50000 1'b0;
	X2 = #50000 1'b1;
	X2 = #50000 1'b0;
	X2 = #100000 1'b1;
	X2 = #50000 1'b0;
	X2 = #50000 1'b1;
	X2 = #100000 1'b0;
	X2 = #50000 1'b1;
end 

// X1
initial
begin
	X1 = 1'b1;
	X1 = #200000 1'b0;
	X1 = #50000 1'b1;
	X1 = #50000 1'b0;
	X1 = #200000 1'b1;
	X1 = #50000 1'b0;
	X1 = #250000 1'b1;
	X1 = #50000 1'b0;
	X1 = #50000 1'b1;
end 

// X0
initial
begin
	X0 = 1'b0;
	X0 = #250000 1'b1;
	X0 = #50000 1'b0;
	X0 = #100000 1'b1;
	X0 = #100000 1'b0;
	X0 = #50000 1'b1;
	X0 = #50000 1'b0;
	X0 = #50000 1'b1;
	X0 = #50000 1'b0;
	X0 = #50000 1'b1;
	X0 = #50000 1'b0;
	X0 = #50000 1'b1;
end 
endmodule

