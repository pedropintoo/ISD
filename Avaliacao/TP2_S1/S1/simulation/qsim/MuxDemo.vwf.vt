// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/24/2022 10:29:58"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          MuxDemo
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module MuxDemo_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [2:0] S;
reg X0;
reg X1;
reg X2;
reg X3;
reg X4;
reg X5;
reg X6;
reg X7;
// wires                                               
wire Y;

// assign statements (if any)                          
MuxDemo i1 (
// port map - connection between master ports and signals/registers   
	.S(S),
	.X0(X0),
	.X1(X1),
	.X2(X2),
	.X3(X3),
	.X4(X4),
	.X5(X5),
	.X6(X6),
	.X7(X7),
	.Y(Y)
);
initial 
begin 
#1000000 $finish;
end 
// S[ 2 ]
initial
begin
	repeat(3)
	begin
		S[2] = 1'b0;
		S[2] = #160000 1'b1;
		# 160000;
	end
	S[2] = 1'b0;
end 
// S[ 1 ]
initial
begin
	repeat(6)
	begin
		S[1] = 1'b0;
		S[1] = #80000 1'b1;
		# 80000;
	end
	S[1] = 1'b0;
end 
// S[ 0 ]
initial
begin
	repeat(12)
	begin
		S[0] = 1'b0;
		S[0] = #40000 1'b1;
		# 40000;
	end
	S[0] = 1'b0;
end 

// X7
initial
begin
	X7 = 1'b0;
	X7 = #20000 1'b1;
	X7 = #20000 1'b0;
	X7 = #80000 1'b1;
	X7 = #60000 1'b0;
	X7 = #20000 1'b1;
	X7 = #80000 1'b0;
	X7 = #20000 1'b1;
	X7 = #120000 1'b0;
	X7 = #60000 1'b1;
	X7 = #40000 1'b0;
	X7 = #60000 1'b1;
	X7 = #20000 1'b0;
	X7 = #40000 1'b1;
	X7 = #80000 1'b0;
	X7 = #80000 1'b1;
	X7 = #20000 1'b0;
	X7 = #20000 1'b1;
	X7 = #20000 1'b0;
	X7 = #40000 1'b1;
end 

// X6
initial
begin
	X6 = 1'b0;
	X6 = #80000 1'b1;
	X6 = #60000 1'b0;
	X6 = #20000 1'b1;
	X6 = #80000 1'b0;
	X6 = #20000 1'b1;
	X6 = #20000 1'b0;
	X6 = #80000 1'b1;
	X6 = #40000 1'b0;
	X6 = #20000 1'b1;
	X6 = #20000 1'b0;
	X6 = #20000 1'b1;
	X6 = #40000 1'b0;
	X6 = #60000 1'b1;
	X6 = #20000 1'b0;
	X6 = #60000 1'b1;
	X6 = #40000 1'b0;
	X6 = #40000 1'b1;
	X6 = #20000 1'b0;
	X6 = #20000 1'b1;
	X6 = #100000 1'b0;
	X6 = #80000 1'b1;
	X6 = #40000 1'b0;
end 

// X5
initial
begin
	X5 = 1'b1;
	X5 = #40000 1'b0;
	X5 = #20000 1'b1;
	X5 = #20000 1'b0;
	X5 = #20000 1'b1;
	X5 = #20000 1'b0;
	X5 = #20000 1'b1;
	X5 = #60000 1'b0;
	X5 = #60000 1'b1;
	X5 = #60000 1'b0;
	X5 = #40000 1'b1;
	X5 = #80000 1'b0;
	X5 = #80000 1'b1;
	X5 = #20000 1'b0;
	X5 = #20000 1'b1;
	X5 = #20000 1'b0;
	X5 = #60000 1'b1;
	X5 = #80000 1'b0;
	X5 = #20000 1'b1;
	X5 = #40000 1'b0;
	X5 = #20000 1'b1;
	X5 = #60000 1'b0;
	X5 = #20000 1'b1;
	X5 = #40000 1'b0;
	X5 = #40000 1'b1;
	X5 = #20000 1'b0;
end 

// X4
initial
begin
	X4 = 1'b1;
	X4 = #20000 1'b0;
	X4 = #40000 1'b1;
	X4 = #80000 1'b0;
	X4 = #100000 1'b1;
	X4 = #20000 1'b0;
	X4 = #20000 1'b1;
	X4 = #20000 1'b0;
	X4 = #20000 1'b1;
	X4 = #60000 1'b0;
	X4 = #20000 1'b1;
	X4 = #20000 1'b0;
	X4 = #20000 1'b1;
	X4 = #40000 1'b0;
	X4 = #80000 1'b1;
	X4 = #20000 1'b0;
	X4 = #40000 1'b1;
	X4 = #20000 1'b0;
	X4 = #20000 1'b1;
	X4 = #20000 1'b0;
	X4 = #20000 1'b1;
	X4 = #20000 1'b0;
	X4 = #60000 1'b1;
	X4 = #20000 1'b0;
	X4 = #80000 1'b1;
	X4 = #20000 1'b0;
	X4 = #20000 1'b1;
	X4 = #60000 1'b0;
end 

// X3
initial
begin
	X3 = 1'b0;
	X3 = #80000 1'b1;
	X3 = #60000 1'b0;
	X3 = #60000 1'b1;
	X3 = #20000 1'b0;
	X3 = #80000 1'b1;
	X3 = #40000 1'b0;
	X3 = #20000 1'b1;
	X3 = #120000 1'b0;
	X3 = #20000 1'b1;
	X3 = #40000 1'b0;
	X3 = #60000 1'b1;
	X3 = #80000 1'b0;
	X3 = #20000 1'b1;
	X3 = #40000 1'b0;
	X3 = #20000 1'b1;
	X3 = #20000 1'b0;
	X3 = #20000 1'b1;
	X3 = #60000 1'b0;
	X3 = #20000 1'b1;
	X3 = #20000 1'b0;
	X3 = #20000 1'b1;
	X3 = #20000 1'b0;
end 

// X2
initial
begin
	X2 = 1'b0;
	X2 = #40000 1'b1;
	X2 = #20000 1'b0;
	X2 = #40000 1'b1;
	X2 = #20000 1'b0;
	X2 = #20000 1'b1;
	X2 = #120000 1'b0;
	X2 = #100000 1'b1;
	X2 = #20000 1'b0;
	X2 = #20000 1'b1;
	X2 = #60000 1'b0;
	X2 = #60000 1'b1;
	X2 = #20000 1'b0;
	X2 = #120000 1'b1;
	X2 = #40000 1'b0;
	X2 = #20000 1'b1;
	X2 = #20000 1'b0;
	X2 = #40000 1'b1;
	X2 = #40000 1'b0;
	X2 = #80000 1'b1;
	X2 = #60000 1'b0;
	X2 = #20000 1'b1;
end 

// X1
initial
begin
	X1 = 1'b1;
	X1 = #60000 1'b0;
	X1 = #20000 1'b1;
	X1 = #40000 1'b0;
	X1 = #20000 1'b1;
	X1 = #20000 1'b0;
	X1 = #20000 1'b1;
	X1 = #80000 1'b0;
	X1 = #60000 1'b1;
	X1 = #20000 1'b0;
	X1 = #140000 1'b1;
	X1 = #20000 1'b0;
	X1 = #20000 1'b1;
	X1 = #40000 1'b0;
	X1 = #20000 1'b1;
	X1 = #20000 1'b0;
	X1 = #20000 1'b1;
	X1 = #40000 1'b0;
	X1 = #20000 1'b1;
	X1 = #40000 1'b0;
	X1 = #20000 1'b1;
	X1 = #40000 1'b0;
	X1 = #80000 1'b1;
	X1 = #20000 1'b0;
	X1 = #20000 1'b1;
	X1 = #60000 1'b0;
end 

// X0
initial
begin
	X0 = 1'b1;
	X0 = #20000 1'b0;
	X0 = #20000 1'b1;
	X0 = #20000 1'b0;
	X0 = #20000 1'b1;
	X0 = #20000 1'b0;
	X0 = #60000 1'b1;
	X0 = #60000 1'b0;
	X0 = #20000 1'b1;
	X0 = #40000 1'b0;
	X0 = #60000 1'b1;
	X0 = #20000 1'b0;
	X0 = #60000 1'b1;
	X0 = #20000 1'b0;
	X0 = #40000 1'b1;
	X0 = #20000 1'b0;
	X0 = #60000 1'b1;
	X0 = #20000 1'b0;
	X0 = #40000 1'b1;
	X0 = #20000 1'b0;
	X0 = #40000 1'b1;
	X0 = #40000 1'b0;
	X0 = #60000 1'b1;
	X0 = #20000 1'b0;
	X0 = #20000 1'b1;
	X0 = #40000 1'b0;
	X0 = #20000 1'b1;
	X0 = #20000 1'b0;
	X0 = #20000 1'b1;
	X0 = #20000 1'b0;
end 
endmodule

